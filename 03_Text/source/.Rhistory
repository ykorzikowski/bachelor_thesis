data_h2_acceptance <- rbind(rbind(py$df_central_useful, py$df_decentral_useful), py$df_useful)
data_h2_fear$group <- 0
data_h2_acceptance$group <- 1
data_h2 <- rbind(data_h2_fear, data_h2_acceptance)
h2_sum_0 <- Summarize(data_h2_fear$Likert, digits=3)
h2_sum_1 <- Summarize(data_h2_acceptance$Likert, digits=3)
h2_desc <- describeBy(data_h2 ~ group)
h2_levene <- leveneTest(data_h2$group, data_h2$Likert)
h2_wilcox <- wilcox.test(Likert~group, data = data_h2, exact = FALSE, correct = FALSE, conf.int = FALSE)
h2_wilcox_effect <- abs(qnorm(as.numeric(h2_wilcox["p.value"]))/sqrt(1892))
data_h2$Likert <- ordered(data_h2$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h2$group[data_h2$group==0] <- "0"
data_h2$group[data_h2$group==1] <- "1"
h2_plot <- ggplot(data_h2, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vs. Nutzen", caption="Fig. 5") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("Angst", "Sinn")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H3
py$df_central_lose_control$group <- 0
py$df_decentral_lose_control$group <- 1
data_h3 <- rbind(py$df_central_lose_control, py$df_decentral_lose_control)
h3_sum_0 <- Summarize(py$df_central_lose_control$Likert, digits=3)
h3_sum_1 <- Summarize(py$df_decentral_lose_control$Likert, digits=3)
h3_levene <- leveneTest(data_h3$group, data_h3$Likert)
h3_desc <- describeBy(data_h3 ~ group)
h3_ttest <- t.test(data_h3$Likert ~ data_h3$group, var.equal = TRUE)
data_h3$Likert <- ordered(data_h3$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h3$group[data_h3$group==0] <- "0"
data_h3$group[data_h3$group==1] <- "1"
h3_plot <- ggplot(data_h3, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vor Kontrollverlust", caption="Fig. 6") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H4
py$df_central_useful$group <- 0
py$df_decentral_useful$group <- 1
data_h4 <- rbind(py$df_central_useful, py$df_decentral_useful)
h4_sum_0 <- Summarize(py$df_central_useful$Likert, digits=3)
h4_sum_1 <- Summarize(py$df_decentral_useful$Likert, digits=3)
h4_desc <- describeBy(data_h4 ~ group)
h4_levene <- leveneTest(data_h4$group, data_h4$Likert)
h4_ttest <- t.test(data_h4$Likert ~ data_h4$group, var.equal = TRUE)
data_h4$Likert <- ordered(data_h4$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h4$group[data_h4$group==0] <- "0"
data_h4$group[data_h4$group==1] <- "1"
h4_plot <- ggplot(data_h4, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Nutzen der App", caption="Fig. 7") +
xlab("") +
scale_x_discrete(labels=c("", "")) +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
g <- grid.arrange(h1_plot, h2_plot, h3_plot, h4_plot,
nrow=2,
ncol=2)
h3_levene
h2_levene
h1_levene
h1_wilcox
h2_wilcox
h2_levene
h2_wilcox
h1_levene
h1_wilcox
library(reticulate)
use_python("/usr/bin/python3")
use_condaenv("r-reticulate")
conda_install("r-reticulate", "pandas")
Sys.setenv(LANG = "en")
options(scipen=999)
if(!require(psych)){install.packages("psych")}
if(!require(FSA)){install.packages("FSA")}
if(!require(lattice)){install.packages("lattice")}
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(plyr)){install.packages("plyr")}
if(!require(boot)){install.packages("boot")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(gridExtra)){install.packages("gridExtra")}
if(!require(viridis)){install.packages("viridis")}
if(!require(knitr)){install.packages("knitr")}
library(viridis)
library(ggplot2)
library(lattice)
library(devtools)
library(magrittr)
library(dplyr)
library(ggplotgui)
library(expss)
library(treemapify)
library(ggthemes)
library(HH)
library(psych)
library(FSA)
library(gridExtra)
library(knitr)
library(car)
#  install_github("kassambara/easyGgplot2")
library(easyGgplot2)
reticulate::repl_python()
age_lables <- c(paste(seq(18, 55, by = 5), seq(18 + 5 - 1, 60 - 1, by = 5),
sep = "-"), paste(57, "+", sep = ""))
py$df$age_grp <- cut(py$df$age, breaks = c(seq(18, 60, by = 5), Inf), labels = age_lables, right = FALSE)
g1 <- ggplot(py$df, aes(age_grp)) + geom_bar(aes(fill=sex), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
xlab("Altersgruppe") +
ylab("Anzahl") +
scale_fill_viridis(discrete = TRUE, name="Geschlecht",
breaks=c("M", "W"), labels= c("männlich", "weiblich")) +
scale_color_viridis(discrete = TRUE) +
labs(title="Verteilung der Altersgruppen",
subtitle="nach Geschlecht und Anzahl", caption="Fig. 1")  +
scale_y_continuous(breaks=c(2, 4, 6, 8, 10, 12, 14, 16))
brks <- seq(-50, 50, 2)
lbls = paste0(as.character(c(seq(50, 0, -2), seq(2, 50, 2))), "")
py$df_tree$state <- unlist(py$df_tree$state)
g3 <- ggplot(py$df_tree, aes(x = state, y = value, fill = parent, label = positive_value)) +
geom_bar(stat = "identity", width = .6) +
labs(title="Nutzung von Corona-Apps",
x="Art der Nutzung",
y="Anzahl",
caption="Fig. 2")  +
scale_fill_viridis(discrete = TRUE, name="Art der App", breaks=c("contact_central", "decentral_analysis"), labels=c("Kontaktverfolgung", "Risikoanalyse")) +
scale_color_viridis(discrete = TRUE) +
scale_y_continuous(breaks = brks, labels = lbls) +
scale_x_discrete(breaks=c("otw", "no", "installed", "daily"),
labels=c("mind. 1x pro Woche", "garnicht", "installiert", "täglich")) +
coord_flip() +  # Flip axes
geom_text(size = .5, position = position_stack(vjust = 0.5)) +
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank())
gg <- grid.arrange(g1, g3,
ncol = 2,
nrow = 2,
layout_matrix = rbind(c(1, 1, 1), c(2,2,2)))
g2 <- ggplot(py$df, aes(work)) + geom_bar(aes(fill=branch), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
xlab("Berufstätigkeit") +
ylab("Anzahl") +
scale_fill_viridis(discrete = TRUE, name="Branche") +
scale_color_viridis(discrete = TRUE) +
labs(title="Verteilung der Branchen",
subtitle="nach Berufstätigkeit und Anzahl", caption="Fig. 3")  +
scale_x_discrete(breaks=c("Ja,TeilzeitoderNebenjob", "Ja,Vollzeit", "Nein"),
labels= c("Teilzeit / Nebenjob", "Vollzeit", "garnicht")) +
scale_y_continuous(breaks=c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20))
g2
# H1
py$df_useful$group <- 0
py$data_h1_fear$group <- 0
py$df_decentral_useful$group <- 0
py$df_central_useful$group <- 0
data_h1_acceptance <- rbind(rbind(rbind(py$df_central_useful, py$df_decentral_useful), py$data_h1_fear), py$df_useful)
data_h1_data_saving <- rbind(py$df_data_saving)
data_h1_data_saving$group <- 1
data_h1 <- rbind(data_h1_data_saving, data_h1_acceptance)
h1_sum_0 <- Summarize(data_h1_data_saving$Likert, digits=3)
h1_sum_1 <- Summarize(data_h1_acceptance$Likert, digits=3)
h1_desc <- describeBy(data_h1 ~ group)
h1_levene <- leveneTest(data_h1$group, data_h1$Likert)
h1_wilcox <- wilcox.test(Likert~group, data = data_h1, exact = FALSE, correct = FALSE, conf.int = FALSE)
h1_wilcox_effect <- abs(qnorm(as.numeric(h1_wilcox["p.value"]))/sqrt(2236))
data_h1$Likert <- ordered(data_h1$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h1$group[data_h1$group==0] <- "0"
data_h1$group[data_h1$group==1] <- "1"
h1_plot <- ggplot(data_h1, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Akzeptanz und Datensparsamkeit", caption="Fig. 4") +
xlab("") +
scale_x_discrete(labels=c("", "")) +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("Akzeptanz", "Datensparsamkeit")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H2
data_h2_fear <- rbind(py$df_central_lose_control, py$df_decentral_lose_control)
data_h2_acceptance <- rbind(rbind(py$df_central_useful, py$df_decentral_useful), py$df_useful)
data_h2_fear$group <- 0
data_h2_acceptance$group <- 1
data_h2 <- rbind(data_h2_fear, data_h2_acceptance)
h2_sum_0 <- Summarize(data_h2_fear$Likert, digits=3)
h2_sum_1 <- Summarize(data_h2_acceptance$Likert, digits=3)
h2_desc <- describeBy(data_h2 ~ group)
h2_levene <- leveneTest(data_h2$group, data_h2$Likert)
h2_wilcox <- wilcox.test(Likert~group, data = data_h2, exact = FALSE, correct = FALSE, conf.int = FALSE)
h2_wilcox_effect <- abs(qnorm(as.numeric(h2_wilcox["p.value"]))/sqrt(1892))
data_h2$Likert <- ordered(data_h2$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h2$group[data_h2$group==0] <- "0"
data_h2$group[data_h2$group==1] <- "1"
h2_plot <- ggplot(data_h2, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vs. Nutzen", caption="Fig. 5") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("Angst", "Sinn")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H3
py$df_central_lose_control$group <- 0
py$df_decentral_lose_control$group <- 1
data_h3 <- rbind(py$df_central_lose_control, py$df_decentral_lose_control)
h3_sum_0 <- Summarize(py$df_central_lose_control$Likert, digits=3)
h3_sum_1 <- Summarize(py$df_decentral_lose_control$Likert, digits=3)
h3_levene <- leveneTest(data_h3$group, data_h3$Likert)
h3_desc <- describeBy(data_h3 ~ group)
h3_ttest <- t.test(data_h3$Likert ~ data_h3$group, var.equal = TRUE)
data_h3$Likert <- ordered(data_h3$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h3$group[data_h3$group==0] <- "0"
data_h3$group[data_h3$group==1] <- "1"
h3_plot <- ggplot(data_h3, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vor Kontrollverlust", caption="Fig. 6") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H4
py$df_central_useful$group <- 0
py$df_decentral_useful$group <- 1
data_h4 <- rbind(py$df_central_useful, py$df_decentral_useful)
h4_sum_0 <- Summarize(py$df_central_useful$Likert, digits=3)
h4_sum_1 <- Summarize(py$df_decentral_useful$Likert, digits=3)
h4_desc <- describeBy(data_h4 ~ group)
h4_levene <- leveneTest(data_h4$group, data_h4$Likert)
h4_ttest <- t.test(data_h4$Likert ~ data_h4$group, var.equal = TRUE)
data_h4$Likert <- ordered(data_h4$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h4$group[data_h4$group==0] <- "0"
data_h4$group[data_h4$group==1] <- "1"
h4_plot <- ggplot(data_h4, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Nutzen der App", caption="Fig. 7") +
xlab("") +
scale_x_discrete(labels=c("", "")) +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
g <- grid.arrange(h1_plot, h2_plot, h3_plot, h4_plot,
nrow=2,
ncol=2)
h1_hist <- ggplot(data_h1, aes(x = Likert)) +
geom_histogram(aes(fill = group),
position = "identity", stat="count", alpha = .4) +
scale_fill_viridis(discrete = TRUE, name="Ansatz",
breaks=c("0", "1"), labels= c("Akzeptanz", "Datensparsamkeit")) +
labs(title="Verteilung Akzeptanz und Datensparsamkeit", subtitle = "1 = klein nach 6 = groß", caption="Fig. 8") +
ylab("Anzahl") +
coord_flip()
h2_hist <- ggplot(data_h1, aes(x = Likert)) +
geom_histogram(aes(fill = group),
position = "identity", stat="count", alpha = .4) +
scale_fill_viridis(discrete = TRUE, name="Ansatz",
breaks=c("0", "1"), labels= c("Angst v. Kontrollverlust", "Sinn")) +
labs(title="Verteilung Angst und Akzeptanz", subtitle = "1 = klein nach 6 = groß", caption="Fig. 9") +
ylab("Anzahl") +
coord_flip()
h3_hist <- ggplot(data_h3, aes(x = Likert)) +
geom_histogram(aes(fill = group),
position = "identity", stat="count", alpha = .4) +
scale_fill_viridis(discrete = TRUE, name="Ansatz",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
labs(title="Verteilung Angst vor Kontrollverlust", subtitle = "1 = klein nach 6 = groß", caption="Fig. 10") +
ylab("Anzahl") +
coord_flip()
h4_hist <- ggplot(data_h4, aes(x = Likert)) +
geom_histogram(aes(fill = group),
position = "identity", stat="count", alpha = .4) +
scale_fill_viridis(discrete = TRUE, name="Ansatz",
breaks=c(0, 1), labels= c("zentral", "dezentral")) +
labs(title="Verteilung Nützlchkeit", subtitle = "1 = klein nach 6 = groß", caption="Fig. 11") +
ylab("Anzahl") +
coord_flip()
g <- grid.arrange(h1_hist, h2_hist, h3_hist, h4_hist,
top = "Anzahl Antworten ohne Gewichtung",
nrow=2,
ncol=2)
h1_sum_0
h4_levene
wilcox.test(Likert~group, data = data_h4, exact = FALSE, correct = FALSE, conf.int = FALSE)
# H1
py$df_useful$group <- 0
py$data_h1_fear$group <- 0
py$df_decentral_useful$group <- 0
py$df_central_useful$group <- 0
data_h1_acceptance <- rbind(rbind(rbind(py$df_central_useful, py$df_decentral_useful), py$data_h1_fear), py$df_useful)
data_h1_data_saving <- rbind(py$df_data_saving)
data_h1_data_saving$group <- 1
data_h1 <- rbind(data_h1_data_saving, data_h1_acceptance)
h1_sum_0 <- Summarize(data_h1_acceptance$Likert, digits=3)
h1_sum_1 <- Summarize(data_h1_data_saving$Likert, digits=3)
h1_desc <- describeBy(data_h1 ~ group)
h1_levene <- leveneTest(data_h1$group, data_h1$Likert)
h1_wilcox <- wilcox.test(Likert~group, data = data_h1, exact = FALSE, correct = FALSE, conf.int = FALSE)
h1_wilcox_effect <- abs(qnorm(as.numeric(h1_wilcox["p.value"]))/sqrt(2236))
data_h1$Likert <- ordered(data_h1$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h1$group[data_h1$group==0] <- "0"
data_h1$group[data_h1$group==1] <- "1"
h1_plot <- ggplot(data_h1, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Akzeptanz und Datensparsamkeit", caption="Fig. 4") +
xlab("") +
scale_x_discrete(labels=c("", "")) +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("Akzeptanz", "Datensparsamkeit")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H2
data_h2_fear <- rbind(py$df_central_lose_control, py$df_decentral_lose_control)
data_h2_acceptance <- rbind(rbind(py$df_central_useful, py$df_decentral_useful), py$df_useful)
data_h2_fear$group <- 0
data_h2_acceptance$group <- 1
data_h2 <- rbind(data_h2_fear, data_h2_acceptance)
h2_sum_0 <- Summarize(data_h2_fear$Likert, digits=3)
h2_sum_1 <- Summarize(data_h2_acceptance$Likert, digits=3)
h2_desc <- describeBy(data_h2 ~ group)
h2_levene <- leveneTest(data_h2$group, data_h2$Likert)
h2_wilcox <- wilcox.test(Likert~group, data = data_h2, exact = FALSE, correct = FALSE, conf.int = FALSE)
h2_wilcox_effect <- abs(qnorm(as.numeric(h2_wilcox["p.value"]))/sqrt(1892))
data_h2$Likert <- ordered(data_h2$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h2$group[data_h2$group==0] <- "0"
data_h2$group[data_h2$group==1] <- "1"
h2_plot <- ggplot(data_h2, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vs. Nutzen", caption="Fig. 5") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("Angst", "Sinn")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H3
py$df_central_lose_control$group <- 0
py$df_decentral_lose_control$group <- 1
data_h3 <- rbind(py$df_central_lose_control, py$df_decentral_lose_control)
h3_sum_0 <- Summarize(py$df_central_lose_control$Likert, digits=3)
h3_sum_1 <- Summarize(py$df_decentral_lose_control$Likert, digits=3)
h3_levene <- leveneTest(data_h3$group, data_h3$Likert)
h3_desc <- describeBy(data_h3 ~ group)
h3_ttest <- t.test(data_h3$Likert ~ data_h3$group, var.equal = TRUE)
data_h3$Likert <- ordered(data_h3$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h3$group[data_h3$group==0] <- "0"
data_h3$group[data_h3$group==1] <- "1"
h3_plot <- ggplot(data_h3, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vor Kontrollverlust", caption="Fig. 6") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H4
py$df_central_useful$group <- 0
py$df_decentral_useful$group <- 1
data_h4 <- rbind(py$df_central_useful, py$df_decentral_useful)
h4_sum_0 <- Summarize(py$df_central_useful$Likert, digits=3)
h4_sum_1 <- Summarize(py$df_decentral_useful$Likert, digits=3)
h4_desc <- describeBy(data_h4 ~ group)
h4_levene <- leveneTest(data_h4$group, data_h4$Likert)
h4_ttest <- t.test(data_h4$Likert ~ data_h4$group, var.equal = TRUE)
h4_wilcox <- wilcox.test(Likert~group, data = data_h4, exact = FALSE, correct = FALSE, conf.int = FALSE)
data_h4$Likert <- ordered(data_h4$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h4$group[data_h4$group==0] <- "0"
data_h4$group[data_h4$group==1] <- "1"
h4_plot <- ggplot(data_h4, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Nutzen der App", caption="Fig. 7") +
xlab("") +
scale_x_discrete(labels=c("", "")) +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
g <- grid.arrange(h1_plot, h2_plot, h3_plot, h4_plot,
nrow=2,
ncol=2)
h4_wilcox
# H1
py$df_useful$group <- 0
py$data_h1_fear$group <- 0
py$df_decentral_useful$group <- 0
py$df_central_useful$group <- 0
data_h1_acceptance <- rbind(rbind(rbind(py$df_central_useful, py$df_decentral_useful), py$data_h1_fear), py$df_useful)
data_h1_data_saving <- rbind(py$df_data_saving)
data_h1_data_saving$group <- 1
data_h1 <- rbind(data_h1_data_saving, data_h1_acceptance)
h1_sum_0 <- Summarize(data_h1_acceptance$Likert, digits=3)
h1_sum_1 <- Summarize(data_h1_data_saving$Likert, digits=3)
h1_desc <- describeBy(data_h1 ~ group)
h1_levene <- leveneTest(data_h1$group, data_h1$Likert)
h1_wilcox <- wilcox.test(Likert~group, data = data_h1, exact = FALSE, correct = FALSE, conf.int = FALSE)
h1_wilcox_effect <- abs(qnorm(as.numeric(h1_wilcox["p.value"]))/sqrt(2236))
data_h1$Likert <- ordered(data_h1$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h1$group[data_h1$group==0] <- "0"
data_h1$group[data_h1$group==1] <- "1"
h1_plot <- ggplot(data_h1, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Akzeptanz und Datensparsamkeit", caption="Fig. 4") +
xlab("") +
scale_x_discrete(labels=c("", "")) +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("Akzeptanz", "Datensparsamkeit")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H2
data_h2_fear <- rbind(py$df_central_lose_control, py$df_decentral_lose_control)
data_h2_acceptance <- rbind(rbind(py$df_central_useful, py$df_decentral_useful), py$df_useful)
data_h2_fear$group <- 0
data_h2_acceptance$group <- 1
data_h2 <- rbind(data_h2_fear, data_h2_acceptance)
h2_sum_0 <- Summarize(data_h2_fear$Likert, digits=3)
h2_sum_1 <- Summarize(data_h2_acceptance$Likert, digits=3)
h2_desc <- describeBy(data_h2 ~ group)
h2_levene <- leveneTest(data_h2$group, data_h2$Likert)
h2_wilcox <- wilcox.test(Likert~group, data = data_h2, exact = FALSE, correct = FALSE, conf.int = FALSE)
h2_wilcox_effect <- abs(qnorm(as.numeric(h2_wilcox["p.value"]))/sqrt(1892))
data_h2$Likert <- ordered(data_h2$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h2$group[data_h2$group==0] <- "0"
data_h2$group[data_h2$group==1] <- "1"
h2_plot <- ggplot(data_h2, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vs. Nutzen", caption="Fig. 5") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("Angst", "Sinn")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H3
py$df_central_lose_control$group <- 0
py$df_decentral_lose_control$group <- 1
data_h3 <- rbind(py$df_central_lose_control, py$df_decentral_lose_control)
h3_sum_0 <- Summarize(py$df_central_lose_control$Likert, digits=3)
h3_sum_1 <- Summarize(py$df_decentral_lose_control$Likert, digits=3)
h3_levene <- leveneTest(data_h3$group, data_h3$Likert)
h3_desc <- describeBy(data_h3 ~ group)
h3_ttest <- t.test(data_h3$Likert ~ data_h3$group, var.equal = TRUE)
h3_wilcox <- wilcox.test(Likert~group, data = data_h3, exact = FALSE, correct = FALSE, conf.int = FALSE)
data_h3$Likert <- ordered(data_h3$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h3$group[data_h3$group==0] <- "0"
data_h3$group[data_h3$group==1] <- "1"
h3_plot <- ggplot(data_h3, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Angst vor Kontrollverlust", caption="Fig. 6") +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
xlab("") +
scale_x_discrete(labels=c("", "")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
# H4
py$df_central_useful$group <- 0
py$df_decentral_useful$group <- 1
data_h4 <- rbind(py$df_central_useful, py$df_decentral_useful)
h4_sum_0 <- Summarize(py$df_central_useful$Likert, digits=3)
h4_sum_1 <- Summarize(py$df_decentral_useful$Likert, digits=3)
h4_desc <- describeBy(data_h4 ~ group)
h4_levene <- leveneTest(data_h4$group, data_h4$Likert)
h4_ttest <- t.test(data_h4$Likert ~ data_h4$group, var.equal = TRUE)
h4_wilcox <- wilcox.test(Likert~group, data = data_h4, exact = FALSE, correct = FALSE, conf.int = FALSE)
data_h4$Likert <- ordered(data_h4$Likert, levels=c(1, 2, 3, 4, 5, 6))
data_h4$group[data_h4$group==0] <- "0"
data_h4$group[data_h4$group==1] <- "1"
h4_plot <- ggplot(data_h4, aes(x=group, y=Likert, group=group, col=group)) +
labs(title="Nutzen der App", caption="Fig. 7") +
xlab("") +
scale_x_discrete(labels=c("", "")) +
scale_color_viridis(discrete = TRUE, name="Art",
breaks=c("0", "1"), labels= c("zentral", "dezentral")) +
geom_boxplot() +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = .75, linetype = "dashed")
g <- grid.arrange(h1_plot, h2_plot, h3_plot, h4_plot,
nrow=2,
ncol=2)
h4_wilcox
h3_wilcox
h3_ttest
Sys.setenv(LANG = "en")
options(scipen=999)
if(!require(psych)){install.packages("psych")}
if(!require(FSA)){install.packages("FSA")}
if(!require(lattice)){install.packages("lattice")}
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(plyr)){install.packages("plyr")}
if(!require(boot)){install.packages("boot")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(gridExtra)){install.packages("gridExtra")}
if(!require(viridis)){install.packages("viridis")}
if(!require(knitr)){install.packages("knitr")}
library(viridis)
library(ggplot2)
library(lattice)
library(devtools)
library(magrittr)
library(dplyr)
library(ggplotgui)
library(expss)
library(treemapify)
library(ggthemes)
library(HH)
library(psych)
library(FSA)
library(gridExtra)
library(knitr)
library(car)
#  install_github("kassambara/easyGgplot2")
library(easyGgplot2)
library(reticulate)
use_python("/usr/bin/python3")
use_condaenv("r-reticulate")
conda_install("r-reticulate", "pandas")
reticulate::repl_python()
